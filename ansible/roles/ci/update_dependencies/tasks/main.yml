---
# Playbook for workspace creation

- name: Set dependencies_file
  set_fact:
    dependencies_file: "{{repo_sources_path}}/repository.rosinstall"

- name: Update package lists
  apt: update_cache=yes
  when: upgrade_all_packages

- name: Update all packages to the latest version
  apt: upgrade=dist
  when: upgrade_all_packages

- name: Read information from wstool
  shell: wstool info --only=path
    chdir={{ros_workspace}}/src
  register: packages_to_update_by_wstool

- name: Set variable to workaround ansible type evaluation issue
  set_fact:
    packages_to_update_by_wstool_stdout_lines: "{{packages_to_update_by_wstool.stdout_lines}}"

- name: Update git reset repositories manually before wstool update
  command: git reset --hard HEAD
    chdir={{item}}
  with_items: "{{packages_to_update_by_wstool_stdout_lines|default([])}}"

- name: Update git pull repositories manually before wstool update
  command: git pull
    chdir={{item}}
  with_items: "{{packages_to_update_by_wstool_stdout_lines|default([])}}"

- name: Check if dependencies file exists
  stat: path={{dependencies_file}}
  register: dependencies_file_exists

- name: Load dependencies recursively
  script: ../files/load_repositories.sh {{ros_workspace}} {{dependencies_file}} {{github_login}} {{github_password}}
  when: dependencies_file_exists.stat.exists

- name: Update dependencies
  shell: bash -c "rosdep update -y"
         chdir={{ros_workspace}}

- name: Install dependencies
  shell: bash -c "rosdep install --from-paths . --ignore-src --rosdistro {{ros_release}} -y"
         chdir={{ros_workspace}}

