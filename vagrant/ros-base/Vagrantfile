# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

memory   = ENV['VAGRANT_MEMORY'] || '1024'
cores    = ENV['VAGRANT_CORES']  || '2'
vram     = ENV['VAGRANT_VRAM']   || '64'

# Multi machine setup. One for machine for each ros distro/ubuntu release
# combination we support.
nodes = [
    { :name    => 'ros-hydro-desktop-precise64',
      :box     => 'hashicorp/precise64',
    },
    { :name    => 'ros-hydro-desktop-precise32',
      :box     => 'hashicorp/precise32',
    },
    { :name    => 'ros-indigo-desktop-trusty64',
      :box     => 'ubuntu/trusty64',
    },
    { :name    => 'ros-indigo-desktop-xfce-trusty64',
      :box     => 'ubuntu/trusty64',
    },
    { :name    => 'ros-indigo-desktop-trusty32',
      :box     => 'ubuntu/trusty32',
    },
]

Vagrant.configure(VAGRANTFILE_API_VERSION)  do |config|
  # Create a machine for each of the nodes.
  nodes.each do |node|
      config.vm.define node[:name] do |node_config|
          node_config.vm.box      = node[:box]
          node_config.vm.hostname = node[:name]
      end
  end

  config.ssh.forward_agent = true

  # VirtualBox
  config.vm.provider :virtualbox do |vb|
      vb.gui = true
      # Use VBoxManage to customize the VM.
      vb.customize ["modifyvm", :id, "--memory", memory.to_i]
      vb.customize ["modifyvm", :id, "--cpus", cores.to_i]
      vb.customize ["modifyvm", :id, "--vram", vram.to_i]
  end

  # Provisioning with Ansible
  config.vm.provision "ansible" do |ansible|
      ansible.playbook = "../../ansible/vagrant_site.yml"
      ansible.verbose  = "vv"
      # There doesn't seem to be a way to find the vagrant dir in ansible and
      # it uses the playbook dir as pwd, so we set here. Used to reboot.
      ansible.extra_vars = {
        vagrant_dir: ENV['PWD'],
      }
  end

end
